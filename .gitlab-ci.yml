image: public.ecr.aws/b6m4i5b7/ss-docker-base:latest

variables:
    AWS_REGION: ap-south-1
    MICROSERVICE_NAME: ai-interview-service

stages:
    - deploy

.install_aws_cli: &install_aws_cli
    - apk add --no-cache bash curl jq python3 py3-pip aws-cli
    - aws configure set region $AWS_REGION
    - curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
    - chmod 555 argocd

.deploy_ecs: &deploy_ecs
    - docker build -t $MICROSERVICE_NAME:latest . --build-arg NPM_TOKEN=$NPM_ACCESS_TOKEN
    - docker tag $MICROSERVICE_NAME:latest $ECR_REPOSITORY/$IMAGE_NAME
    - docker login -u AWS -p $(aws ecr get-login-password --region ap-south-1) $ECR_REPOSITORY
    - docker push $ECR_REPOSITORY/$IMAGE_NAME
    - ./argocd app actions run $ENVIRONMENT-$MICROSERVICE_NAME restart --kind Deployment --all --auth-token $ARGOCD_API_TOKEN --server cd.supersourcing.com --grpc-web

production:
    stage: deploy
    services: 
        - docker:dind
    before_script:
        - *install_aws_cli
    script: 
        - *deploy_ecs
    environment: production
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
          when: manual

staging:
    stage: deploy
    services: 
        - docker:dind
    before_script:
        - *install_aws_cli
    script: 
        - *deploy_ecs
    environment: staging
    only:
        - main

dev:
    stage: deploy
    services: 
        - docker:dind
    before_script:
        - *install_aws_cli
    script: 
        - *deploy_ecs
    environment: dev
    only:
        - develop
